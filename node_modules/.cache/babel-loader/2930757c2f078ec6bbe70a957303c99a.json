{"ast":null,"code":"var _jsxFileName = \"/home/codeyourfuture/Documents/Full-Stack-Project-Assessment/client/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Video from \"./Video\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  _s();\n\n  let firstVideo = {\n    url: \"https://www.youtube.com/embed/qw--VYLpxG4\",\n    title: \"halla\"\n  };\n  const [video, setVideo] = useState([firstVideo]);\n  const [addData, setAddData] = useState({\n    url: \"\",\n    title: \"\"\n  }); //  const titleChangeHandler =(event)=>{\n  //     setEnteredTitle(event.target.value);\n  //  }\n\n  const ChangeHandler = event => {\n    const inputName = event.target.getAttribute(\"name\");\n    const inputValue = event.target.value;\n    const addedVideo = { ...addData\n    };\n    addedVideo[inputName] = inputValue;\n    setAddData(addedVideo);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    console.log(addData);\n    const newVideo = {\n      url: addData.url,\n      title: addData.title\n    };\n    let videos = [...video, newVideo];\n    setVideo(videos);\n    setAddData({\n      url: \"\",\n      title: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: \"float-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          onChange: ChangeHandler,\n          value: addData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"video-link\",\n        children: \"URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        id: \"video-link\",\n        name: \"url\",\n        onChange: ChangeHandler,\n        value: addData.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }, this), video.map((element, index) => {\n      return /*#__PURE__*/_jsxDEV(Video, {\n        URL: element.url,\n        Title: element.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Form, \"v1yVpiBHu1pDv6x8yrIaXrhfzeI=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/codeyourfuture/Documents/Full-Stack-Project-Assessment/client/src/Form.js"],"names":["React","useState","Video","Form","props","firstVideo","url","title","video","setVideo","addData","setAddData","ChangeHandler","event","inputName","target","getAttribute","inputValue","value","addedVideo","submitHandler","preventDefault","console","log","newVideo","videos","map","element","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Video from \"./Video\";\nconst Form =(props)=>{\n  let firstVideo = {url:\"https://www.youtube.com/embed/qw--VYLpxG4\",title:\"halla\"};\n const [video,setVideo] = useState([firstVideo]);\n const [addData, setAddData] = useState({\n   url: \"\",\n   title: \"\"\n });\n\n//  const titleChangeHandler =(event)=>{\n//     setEnteredTitle(event.target.value);\n//  }\n const ChangeHandler = (event) => {\n   const inputName = event.target.getAttribute(\"name\");\n   const inputValue = event.target.value;\n   const addedVideo = { ...addData };\n    addedVideo[inputName] = inputValue;\n   setAddData(addedVideo);\n };\n const submitHandler = event=>{\n  event.preventDefault();\n  console.log(addData);\n  const newVideo = {\n    url: addData.url,\n    title: addData.title,\n  };\n  let videos = [...video, newVideo];\n  setVideo(videos);\n  setAddData({\n    url: \"\",\n    title: \"\"\n  });\n\n }\n\n return (\n   <div>\n     <form onSubmit={submitHandler} className=\"float-left\">\n       <div className=\"\">\n         <label htmlFor=\"title\">Title</label>\n         <input\n           type=\"text\"\n           id=\"title\"\n           name=\"title\"\n           onChange={ChangeHandler}\n           value={addData.title}\n         ></input>\n       </div>\n       <label htmlFor=\"video-link\">URL</label>\n       <input\n         type=\"url\"\n         id=\"video-link\"\n         name=\"url\"\n         onChange={ChangeHandler}\n         value={addData.url}\n       ></input>\n       <button>Add</button>\n     </form>\n     {video.map((element, index) => {\n       return <Video key={index} URL={element.url} Title={element.title} />;\n     })}\n   </div>\n );\n}\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}